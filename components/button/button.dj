<template> <button class="{{ class }} {{ styles.default }}" {{ js_attrs }} {% if id %}id="{{ id }}"{% endif %} {% if disabled %}disabled{% endif %} > {% if icon %} <span class="mr-2">{{ icon }}</span> {% endif %} <slot name="header"></slot> <slot>{{ text }}</slot> <slot name="footer"></slot> </button> </template> <style scoped> .default { @apply bg-gray-100 p-4 rounded transition flex items-center; } .default:hover { @apply bg-gray-200; } .disabled { @apply opacity-50 cursor-not-allowed; } </style> <script lang="ts"> /** * A customizable button component with named slots, icons, Alpine.js, and HTMX. * @example <button_component text="Click Me"><template slot="header"><icon_component name="star" /></template></button_component> */ export default { name: 'button', props: { id: { type: String as () => string | null, default: null }, text: { type: String as () => string, default: 'Click Me', required: true }, class: { type: String as () => string, default: 'default' }, js: { type: String as () => 'none' | 'alpine' | 'htmx', default: 'none' }, disabled: { type: Boolean as () => boolean, default: false }, icon: { type: String as () => string | null, default: null } }, data(): { isClicked: boolean } { return { isClicked: false }; }, computed: { js_attrs(): string { if (this.js === 'alpine') { return `x-data="{ isClicked: ${this.isClicked} }" @click="isClicked = !isClicked" :class="{ 'bg-blue-500 text-white': isClicked }"`; } if (this.js === 'htmx') { return 'hx-post="/toggle/" hx-swap="outerHTML"'; } return ''; } } }; </script>
